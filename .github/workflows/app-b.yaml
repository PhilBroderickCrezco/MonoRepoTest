name: App B
on:
  push:
  workflow_dispatch:
    inputs:
      allowDeploy:
        description: 'Allow deployments if running from a branch other than master'
        default: false
        type: boolean

env:
  BUILD_CONFIGURATION: 'Release'

permissions:
  id-token: write # requesting JWT in migration workflows for oidc auth with Azure
  contents: read # required for actions/checkout
  statuses: write # required for dorny/test-reporter
  checks: write # required for dorny/test-reporter

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  FilesChanged:
    runs-on: ubuntu-latest
    name: detect what files changed
    outputs:
      filesChanged: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v3
        
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
            src:
              - .github/workflows/app-b.yaml
              - AppB/**
              - MonoRepo.Common/**
  
  Build:
    runs-on: ubuntu-latest
    needs: [FilesChanged]
    if: needs.FilesChanged.outputs.filesChanged == 'true' || github.event_name == 'workflow_dispatch' || inputs.allowDeploy
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - uses: actions/checkout@v3

      - name: Install .NET Core 7 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Restore Projects
        run: dotnet restore AppB/MonoRepo.AppB/MonoRepo.AppB.csproj

      - name: Build
        run: dotnet build AppB/MonoRepo.AppB/MonoRepo.AppB.csproj --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}

      - id: setoutput
        run: echo "success=true" >> "$GITHUB_OUTPUT"
  
#  AfterBuild:
#    needs: [Build]
#    runs-on: ubuntu-latest
#    if: success() && github.ref != 'refs/heads/master' && !inputs.allowDeploy
#    outputs:
#      success: ${{ steps.setoutput.outputs.SUCCESS }}
#    steps:
#      - id: setoutput
#        run: echo "success=true" >> "$GITHUB_OUTPUT"
#  
#  DummyStep:
#    runs-on: ubuntu-latest
#    needs: [FilesChanged]
#    if: needs.FilesChanged.outputs.filesChanged == 'false' && github.ref != 'refs/heads/master'
#    outputs:
#      success: ${{ steps.setoutput.outputs.success }}
#    steps:
#      - id: setoutput
#        run: echo "success=true" >> "$GITHUB_OUTPUT"
  
  AppBStatusCheck:
    runs-on: ubuntu-latest
    if: always() && github.ref != 'refs/heads/master' && !inputs.allowDeploy
    needs: [Build]
    steps:
      - run: |
          echo "${{ needs.Build.outputs.success }}"
          echo "${{ needs.Build.outputs.success != '' }}"
          echo "${{ (needs.Build.outputs.success != '' && needs.Build.outputs.success)}}"
          echo "${{ needs.Build.outputs.success == '' }}"
          echo "${{ (needs.Build.outputs.success == '' && !needs.Build.outputs.success)}}"
      - run: |
          passed="${{ needs.FilesChanged.outputs.filesChanged == 'false' || (needs.Build.outputs.success == '' && !needs.Build.outputs.success) }}"
          if [[ $passed == "true" ]]; then
            echo "App B passed"
            exit 0
          else
            echo "App B failed"
            exit 1
          fi
  
  AppBDeploy:
    name: App B Deploy
    environment: Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || inputs.allowDeploy
    needs: [ Build ]
    steps:
      - run: echo "Deploying App B"