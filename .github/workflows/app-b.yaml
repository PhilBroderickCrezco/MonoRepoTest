name: App B
on:
  push:
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: 'Release'

permissions:
  id-token: write # requesting JWT in migration workflows for oidc auth with Azure
  contents: read # required for actions/checkout
  statuses: write # required for dorny/test-reporter
  checks: write # required for dorny/test-reporter

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  FilesChanged:
    runs-on: ubuntu-latest
    name: detect what files changed
    outputs:
      filesChanged: ${{ steps.changes.outputs.src }}
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
            src:
              - .github/workflows/app-b.yaml
              - AppB/**
              - MonoRepo.Common/**
  
  Build:
    runs-on: ubuntu-latest
    needs: [FilesChanged]
    if: needs.FilesChanged.outputs.filesChanged == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Install .NET Core 7 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Restore Projects
        run: dotnet restore AppB/MonoRepo.AppB/MonoRepo.AppB.csproj

      - name: Build
        run: dotnet build AppB/MonoRepo.AppB/MonoRepo.AppB.csproj --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}
  
  AfterBuild:
    needs: [Build]
    runs-on: ubuntu-latest
    if: success()
    outputs:
      success: ${{ steps.setoutput.outputs.SUCCESS }}
    steps:
      - id: setoutput
        run: echo "success=true" >> "$GITHUB_OUTPUT"
  
  DummyStep:
    runs-on: ubuntu-latest
    needs: [FilesChanged]
    if: needs.FilesChanged.outputs.filesChanged == 'false'
    outputs:
      success: ${{ steps.setoutput.outputs.success }}
    steps:
      - id: setoutput
        run: echo "success=true" >> "$GITHUB_OUTPUT"
  
  AppBStatusCheck:
    runs-on: ubuntu-latest
    if: always()
    needs: [AfterBuild, DummyStep]
    steps:
      - run: |
          passed="${{ needs.AfterBuild.outputs.success || needs.DummyStep.outputs.success }}"
          if [[ $passed == "true" ]]; then
            echo "App B passed"
            exit 0
          else
            echo "App B failed"
            exit 1
          fi