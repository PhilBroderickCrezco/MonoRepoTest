name: Master PR
on:
  pull_request:
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: 'Release'

permissions:
  id-token: write # requesting JWT in migration workflows for oidc auth with Azure
  contents: read # required for actions/checkout
  statuses: write # required for dorny/test-reporter
  checks: write # required for dorny/test-reporter

#concurrency:
#  group: ${{ github.workflow }}-${{ github.ref }}
#  cancel-in-progress: true

jobs:
  BuildSolution:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install .NET Core 7 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Restore Projects
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }} MonoRepo.sln
        
  Changes:
    runs-on: ubuntu-latest
    outputs:
      app-a: ${{ steps.filter.outputs.app-a }}
      app-b: ${{ steps.filter.outputs.app-b }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app-a:
              - .github/workflows/app-a.yaml
              - AppA/**
              - MonoRepo.Common/**
            app-b:
              - .github/workflows/app-b.yaml
              - AppB/**
              - MonoRepo.Common/**
  
  AppA:
    uses: ./.github/workflows/app-a.yaml
    secrets: inherit
    needs: [ Changes ]
    if: needs.Changes.outputs.app-a == 'true'
    
  AppAStatusCheck:
    runs-on: ubuntu-latest
    if: |
      always() && 
      ((needs.Changes.outputs.app-a == 'true' && success()) || (needs.Changes.outputs.app-a == 'false' && needs.AppA.result == 'skipped' ))
    needs: [ AppA ]
    steps:
      - run: echo "App A passed"
    
  AppB:
    uses: ./.github/workflows/app-b.yaml
    secrets: inherit
    needs: [ Changes ]
    if: needs.Changes.outputs.app-b == 'true'
    
  AppBStatusCheck:
    runs-on: ubuntu-latest
    if: |
      always() && 
      ((needs.Changes.outputs.app-b == 'true' && success()) || (needs.Changes.outputs.app-b == 'false' && needs.AppB.result == 'skipped'))
    needs: [ AppB ]
    steps:
      - run: echo "App B passed"